plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.springframework.boot' version '1.5.19.RELEASE'
    id 'org.owasp.dependencycheck' version '3.3.2'
    id 'se.patrikerdes.use-latest-versions' version '0.2.7'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'org.sonarqube' version '2.6.2'
    id 'jacoco'
    id 'idea'
    id 'eclipse'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id "info.solidsoft.pitest" version "1.3.0"
}

group = 'uk.gov.hmcts.reform.dm'
version = '1.2.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'project-report'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//    XLINT
compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

tasks.withType(Test) {
    maxParallelForks = 1
}

// Xlint type thingy????
checkstyle {
    showViolations = true
    maxWarnings = 2
    toolVersion = '8.18'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = "6.11.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

//    Report Check Style added by Alex
tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
    }
}

//    OWASP (./gradlew -DdependencyCheck.failBuild=true dependencyCheck;)
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = "$rootDir/dependency-check-suppressions.xml"
    outputDirectory = "$rootDir/build/reports"
}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    jcenter()
    mavenLocal()
}

apply from: 'liquibase.gradle'

def springBootVersion = plugins.getPlugin('org.springframework.boot').class.package.implementationVersion

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

def versions = [
    ehcache            : '3.5.2',
    jacocoMavenPlugin  : '0.7.9',
    jackson            : '2.9.9',
    jetty              : '9.4.11.v20180605',
    jsonUnit           : '1.31.1',
    JUnitParams        : '1.1.1',
    lombok             : '1.18.0',
    liquibase          : '3.6.1',
    postgresql         : '42.2.2',
    powermock          : '1.7.4',
    sonar              : '3.2',
    springBoot         : springBootVersion,
    springfoxSwagger   : '2.9.2',
]

dependencies {
    compile group: 'com.microsoft.azure', name: 'azure-storage', version: '8.0.0'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.13'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.20'
    compile group: 'org.apache.tomcat', name: 'tomcat-annotations-api', version: '9.0.8'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson

    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '5.1'

    compile group: 'org.ehcache', name: 'ehcache', version: versions.ehcache

    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.18.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: versions.springBoot
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.24.0.RELEASE'

    compile group: 'org.liquibase', name: 'liquibase-core', version: versions.liquibaseVersion

    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    compile group: 'org.postgresql', name: 'postgresql', version: versions.postgresql

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    compile group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.3'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: '2.1.1'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: '2.1.1'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: '2.1.1'
    compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version: '2.0.0'
    compile ("uk.gov.hmcts.reform:properties-volume-spring-boot-starter:0.0.4"){
        exclude group: 'org.springframework.cloud' , module : 'spring-cloud-context'
        exclude group: 'org.springframework.boot' , module: 'spring-boot-starter-web'
    }

    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: '1.4.0.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix-dashboard', version: '1.4.0.RELEASE'

    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
        exclude(module: 'commons-logging')
    }

    testCompile(group: 'com.github.tomakehurst', name: 'wiremock', version: '2.18.0') {
        exclude(module: 'jetty')
        exclude(module: 'httpclient')
        exclude(module: 'json-path')
        exclude(module: 'jopt-simple')
        exclude(module: 'jetty-server')
        exclude(module: 'jetty-servlet')
        exclude(module: 'jetty-servlets')
        exclude(module: 'jetty-webapp')
    }
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit', version: versions.jsonUnit
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: versions.jsonUnit
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '4.2.3.RELEASE'

    testCompile group: 'com.h2database', name: 'h2', version: '1.0.60'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: versions.powermock
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: versions.powermock

    testCompile group: 'org.eclipse.jetty', name: 'jetty-server', version: versions.jetty
    testCompile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: versions.jetty
    testCompile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: versions.jetty
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: versions.JUnitParams

    // For batch migration use only
    compile group: 'org.apache.jclouds', name: 'jclouds-compute', version: '2.+'
    compile group: 'net.time4j', name: 'time4j-core', version: '4.38'
    // They can be removed alongside with migration code

    compile group: 'org.pitest', name: 'pitest', version: '1.3.2'
    compile group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.3.0'
    compile group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: '0.5'
}

def coverageExclusionList = [
    '**uk/gov/hmcts/dm/domain/',
    '**uk/gov/hmcts/dm/DmApp.java',
    '**uk/gov/hmcts/dm/hateos/*',
    '**uk/gov/hmcts/dm/exception/*',
    '**uk/gov/hmcts/dm/domain/*',
    '**uk/gov/hmcts/dm/commandobject/*',
    '**uk/gov/hmcts/dm/hibernate/*',
    '**uk/gov/hmcts/dm/config/**/*',
    '**uk/gov/hmcts/dm/errorhandler/*',
    '**uk/gov/hmcts/dm/repository/RepositoryFinder.java',
    '**uk/gov/hmcts/dm/service/batch/CustomItemWriter.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamHealth.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamServiceHealth.java'
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = '0.7.9' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusionList)
        })
    }
}

//(./gradlew sonarqube)
sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "${project.buildDir}/reports/pitest"
        // Migration code
        property "sonar.cpd.exclusions", "**/MigrateProgressReport.java,**/BatchMigrateProgressReport.java"
        property "sonar.coverage.exclusions", "**/MigrateProgressReport.java,**/BatchMigrateProgressReport.java"
    }
}

pitest {
    targetClasses = ['**uk.gov.hmcts.dm.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 65  // Target 75
    coverageThreshold = 80  // Match our general 80% coverage goal
}


//(./gradlew clean jar) build/libs/em-api-*-all.jar
//(./gradlew installDist bootRepackage) build/install/dm-store/bin/dm-store
jar {
    baseName 'dm-store'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

bootRepackage {
    mainClass = 'uk.gov.hmcts.dm.DmApp'
}

//This is used in get the version for fakeversion and buildInfo  (./gradlew -q printVersion)
task printVersion {
    description 'Prints the version of this project'
    doLast {
        print project.version
    }
}

// Run the app (./gradlew run -Ddebug=true)
run {
    def debug = System.getProperty("debug")
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
    mainClassName = 'uk.gov.hmcts.dm.DmApp'
}

task installDist(overwrite: true) {
    // This task must be overwritten to do as it's breaking JAR packaging and it's a mandatory step of swagger
    // documentation publication.
}
