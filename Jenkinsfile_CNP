#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Document Management Store API',
        projectUrlStr: 'https://github.com/hmcts/document-management-store-app'
    ],
])

@Library("Infrastructure")

def type = "java"
def product = "dm"
def component = "store"

def secrets = [
    's2s-${env}': [
        secret('microservicekey-em-gw', 'S2S_TOKEN'),
        secret('microservicekey-ccd-case-disposer', 'CCD_CASE_DISPOSER_S2S_TOKEN')
    ],
    'dm-${env}': [
        secret('dm-store-storage-account-primary-connection-string', 'STORAGEACCOUNT_PRIMARY_CONNECTION_STRING')
    ]
]


static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
    'preview': 'aat',
    'spreview': 'saat'
]

withPipeline(type , product, component) {

    env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'
    env.ENABLE_SECURE_URL = true

    enableDbMigration('dm')
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    disableLegacyDeployment()
    enableAksStagingDeployment()
    enableSlackNotifications('#em-dev-chat')
    enablePactAs([AppPipelineDsl.PactRoles.PROVIDER])

    onMaster {
        env.TEST_URL = "http://dm-store-aat.service.core-compute-aat.internal"
        env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
        env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
        env.MP4_52MB = "e58a9fa5-4f6f-438f-b44a-8c0877e945d0/binary"
        env.MP4_111MB = "50f9dd86-1615-461d-bca8-e437103dd734/binary"

        afterSuccess('test') {
            sh '''
            curl https://raw.githubusercontent.com/hmcts/reform-api-docs/master/bin/publish-swagger-docs.sh > publish-swagger-docs.sh
            sh ./publish-swagger-docs.sh
             '''
        }
    }

    onPR {
        env.TEST_URL = "http://dm-store-aat.service.core-compute-aat.internal"
        env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
        env.ENABLE_METADATA_MIGRATION = false
        env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
        env.MP4_52MB = "e58a9fa5-4f6f-438f-b44a-8c0877e945d0/binary"
        env.MP4_111MB = "50f9dd86-1615-461d-bca8-e437103dd734/binary"
        env.ENABLE_PASSWORD_CHECK = true
    }

    afterAlways('test') {

               publishHTML target: [
                  allowMissing         : true,
                  alwaysLinkToLastBuild: true,
                  keepAll              : true,
                  reportDir            : "build/reports/checkstyle",
                  reportFiles          : "main.html",
                  reportName           : "DM-Store Checkstyle Main Report"
              ]

              publishHTML target: [
                  allowMissing         : true,
                  alwaysLinkToLastBuild: true,
                  keepAll              : true,
                  reportDir            : "build/reports/checkstyle",
                  reportFiles          : "test.html",
                  reportName           : "DM-Store Checkstyle Test Report"
              ]

             publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/checkstyle",
                    reportFiles          : "functionalTest.html",
                    reportName           : "DM-Store Checkstyle AAT Report"
             ]

             publishHTML target: [
                     allowMissing         : true,
                     alwaysLinkToLastBuild: true,
                     keepAll              : true,
                     reportDir            : "build/reports/checkstyle",
                     reportFiles          : "contractTest.html",
                     reportName           : "DM-Store Checkstyle PACT Report"
             ]

             publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/test",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Unit Tests Report"
             ]
        }

    afterAlways('smoketest:preview') {
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/smoke",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Smoke Test Report"
            ]
        }

    afterAlways('smoketest:aat') {
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/smoke",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Smoke Test Report"
            ]
        }

    afterAlways('functionalTest:preview') {
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/functional",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Functional Test Report"
            ]
            steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        }

    afterAlways('functionalTest:aat') {
            steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/functional",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Functional Test Report"
            ]

           steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        }

    afterAlways('pactconsumerVerification:preview') {
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/contract",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Contract Test Report"
            ]
        }

    afterAlways('pactconsumerVerification:aat') {
            publishHTML target: [
                    allowMissing         : true,
                    alwaysLinkToLastBuild: true,
                    keepAll              : true,
                    reportDir            : "build/reports/tests/contract",
                    reportFiles          : "index.html",
                    reportName           : "DM-Store Contract Test Report"
            ]
        }

    syncBranchesWithMaster(['demo', 'perftest', 'ithc'])
}
