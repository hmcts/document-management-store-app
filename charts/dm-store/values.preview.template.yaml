java:
  devmemoryLimits: "3Gi"
  devmemoryRequests: '3Gi'
  cpuRequests: "1000m"
  cpuLimits: "2000m"
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  readinessDelay: 60
  secrets:
    BLOB_ACCOUNT_NAME:
      secretRef: storage-account-{{ .Release.Name }}-blobstorage
      key: storage_account_name
    BLOB_ACCESS_KEY:
      secretRef: storage-secret-{{ .Release.Name }}-blobstorage
      key: accessKey
    BLOB_SERVICE_ENDPOINT:
      secretRef: storage-secret-{{ .Release.Name }}-blobstorage
      key: blobEndpoint
  keyVaults:
    dm: # Need to override only to get rid of the BlobStorage URL/details mapping.
      resourceGroup: dm-shared
      secrets:
        - name: RpaAppInsightsInstrumentationKey
          alias: azure.application-insights.instrumentation-key
  environment:
    # Endpoints
    IDAM_USER_BASE_URI: https://idam-api.aat.platform.hmcts.net
    IDAM_S2S_BASE_URI: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    SPRING_DATASOURCE_HOST: "{{ .Release.Name }}-postgresql"
    SPRING_DATASOURCE_NAME: "{{ .Values.postgresql.auth.database}}"
    SPRING_DATASOURCE_USERNAME: "{{ .Values.postgresql.auth.username}}"
    SPRING_DATASOURCE_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    # logging vars & healthcheck
    REFORM_ENVIRONMENT: preview
    PACKAGES_ENVIRONMENT: preview
    ENABLE_DB_MIGRATE: 'true'
    RUN_DB_MIGRATION_ON_STARTUP: true
    STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(BLOB_ACCOUNT_NAME);AccountKey=$(BLOB_ACCESS_KEY);EndpointSuffix=core.windows.net"
    DOCUMENT_METADATA_UPDATE_MILLISECONDS: 1000
    ENABLE_METADATA_MIGRATION: 'false'
    STORAGE_CONTAINER_METADATA_CONTAINER_NAME: metadatamigration{{ .Release.Name }}
    STORAGE_CONTAINER_ORPHAN_DOCUMENTS_CONTAINER_NAME: orphandocumentdeletion{{ .Release.Name }}
  postgresql:
    enabled: true
blobstorage:
  enabled: true

ccd-case-document-am-api:
  enabled: true
  java:
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    releaseNameOverride: ${SERVICE_NAME}-ccd-case-document-am-api
    environment:
      CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      DM_STORE_BASE_URL: https://${SERVICE_FQDN}

ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: true
    managementWeb:
      enabled: false
    definitionImporter:
      enabled: false
    userProfileImporter:
      enabled: false
    apiGatewayWeb:
      enabled: true
    postgresql:
      enabled: false
    s2s:
      enabled: false
    elastic:
      enabled: true
    ras:
      enabled: false
  global:
    ccdApiGatewayIngress: http://{{ .Release.Name }}-ccd-api-gw
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdDataStoreUrl: http://{{ .Release.Name }}-ccd-data-store-api
    ccdDefinitionStoreUrl: http://{{ .Release.Name }}-ccd-definition-store
    ccdUserProfileUrl: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
    dmStoreUrl: https://${SERVICE_FQDN}
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    enableKeyVaults: true
    devMode: true

  ccd-api-gateway-web:
    nodejs:
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_IDAM_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: https://${SERVICE_FQDN}
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      devcpuRequests: 500m
      devmemoryRequests: 2048Mi
      devmemoryLimits: 4096Mi
      autoscaling:
        enabled: false
      disableKeyVaults: true
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_DB_USERNAME: hmcts
        DATA_STORE_DB_PASSWORD: hmcts
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,ccd_case_document_am_api
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        CASE_DOCUMENT_AM_URL: http://${SERVICE_NAME}-ccd-case-document-am-api
        ROLE_ASSIGNMENT_URL: http://am-role-assignment-service-aat.service.core-compute-aat.internal
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        ENABLE_ATTRIBUTE_BASED_ACCESS_CONTROL: true
        ENABLE_PSEUDO_ROLE_ASSIGNMENTS_GENERATION: true
        ENABLE_PSEUDO_ACCESS_PROFILES_GENERATION: true
      keyVaults: []
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}
      keyVaults: []

  ccd-definition-store-api:
    java:
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      imagePullPolicy: Always
      autoscaling:
        enabled: false
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_admin,ccd_gateway,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,ccd_case_document_am_api
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat2.internal:8443/openam/oauth2/hmcts
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
        ELASTIC_SEARCH_FAIL_ON_IMPORT: false
        USER_PROFILE_HOST: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
      keyVaults: [ ]
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
  postgresql:
    persistence:
      enabled: false

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    imageTag: "7.17.1"
    initResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
  logstash:
    elasticsearch:
      host: ${SERVICE_NAME}-es-master
      port: 9200
    image: hmctspublic.azurecr.io/ccd/logstash
    imageTag: "latest"
    extraEnvs:
      - name: DATA_STORE_URL
        value: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
      - name: DATA_STORE_USER
        value: hmcts
      - name: DATA_STORE_PASS
        value: hmcts
      - name: DB_URL
        value: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
      - name: DB_USER
        value: hmcts
      - name: DB_PWD
        value: hmcts
      - name: ES_HOSTS
        value: http://${SERVICE_NAME}-es-master:9200
      - name: ES_DATA_NODES_URL
        value: http://${SERVICE_NAME}-es-master:9200
      - name: ELASTIC_SEARCH_DATA_NODES_HOSTS
        value: http://${SERVICE_NAME}-es-master:9200
      - name: ES_URL
        value: http://${SERVICE_NAME}-es-master:9200
    resources:
      requests:
        cpu: "500m"
        memory: "1024Mi"
      limits:
        cpu: "2500m"
        memory: "1024Mi"
    configTpl:
      xpack.monitoring.enabled: "false"
      db.url: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
      db.user: hmcts
      db.pwd: hmcts
      es.data.nodes.url: http://${SERVICE_NAME}-es-master:9200
    livenessProbe:
      initialDelaySeconds: 90

xui-webapp:
  enabled: true
  nodejs:
    memoryLimits: "3Gi"
    memoryRequests: '1.5Gi'
    cpuRequests: "1000m"
    cpuLimits: "2000m"
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      HEALTH_CCD_COMPONENT_API: http://gateway-${SERVICE_FQDN}/health
      HEALTH_CCD_DATA_API: https://ccd-data-store-api-${SERVICE_FQDN}/health
      HEALTH_DOCUMENTS_API: https://${SERVICE_FQDN}/health
      SERVICES_CCD_COMPONENT_API: http://{{ .Release.Name }}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://{{ .Release.Name }}-ccd-data-store-api
      SERVICES_DOCUMENTS_API: https://${SERVICE_FQDN}
      SERVICES_DOCUMENTS_API_V2: http://${SERVICE_NAME}-ccd-case-document-am-api
      FEATURE_REDIS_ENABLED: false
      FEATURE_APP_INSIGHTS_ENABLED: false
      FEATURE_SECURE_COOKIE_ENABLED: false
      FEATURE_HELMET_ENABLED: false
      REDISCLOUD_URL: http://dummyrediscloudurl
      UV_THREADPOOL_SIZE: 128
      PROTOCOL: http

idam-pr:
  enabled: true
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback


