plugins {
    id 'groovy'
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '1.5.19.RELEASE'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

bootRepackage.enabled = false

def springBootVersion = plugins.getPlugin('org.springframework.boot').class.package.implementationVersion

def versions = [
    springBoot         : springBootVersion,
]

configurations {
    functionalTestCompile.extendsFrom(testCompile)
    functionalTestRuntime.extendsFrom(testRuntime)
}

dependencies {
    compile group: 'com.google.guava', name :'guava', version:'21.0'

    compile group: 'org.codehaus.groovy', name :'groovy-all', version:'2.4.17'
    compile group: 'org.hamcrest', name :'hamcrest-core'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    compile group: 'org.springframework.boot', name :'spring-boot-starter-jetty', version: versions.springBoot
    compile group: 'org.springframework.boot', name :'spring-boot-starter-logging', version: versions.springBoot

    runtime group: 'org.springframework.boot', name :'spring-boot-devtools', version: versions.springBoot

    compile group: 'com.microsoft.azure', name: 'azure-storage', version: '8.0.0'

    testRuntime group: 'cglib', name :'cglib-nodep', version:'3.2.4'
    testCompile group: 'com.github.stephenc.jcip', name :'jcip-annotations', version:'1.0-1'
    testCompile group: 'com.fasterxml.jackson.core', name :'jackson-databind'
    testCompile group: 'io.rest-assured', name :'rest-assured', version:'3.3.0'
    testCompile group: 'junit', name :'junit', version:'4.12'
    testCompile group: 'org.springframework.boot', name :'spring-boot-starter-test', version: versions.springBoot
    testCompile group: 'org.spockframework', name :'spock-core', version:'1.3-groovy-2.4'
    testCompile group: 'org.spockframework', name :'spock-spring', version:'1.3-groovy-2.4'
    testCompile group: 'com.warrenstrange', name: 'googleauth', version: '1.1.5'

    testCompile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.2'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task {
    systemProperties System.getProperties()
}

sourceSets {
    functionalTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/functionalTest/groovy')
        }
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/functionalTest/java')
        }
        resources {
            srcDir('src/functionalTest/resources')
        }
    }
}

dependencies {
    functionalTestCompile(sourceSets.test.output)
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests against DM API instance'
    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
    setClasspath(sourceSets.functionalTest.runtimeClasspath)
    include "uk/gov/hmcts/dm/functional/*IT.*"
}
