
buildscript {
    dependencies {
        classpath("org.flywaydb:flyway-database-postgresql:10.8.1")
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.57'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.springframework.boot' version '3.2.3'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
    id 'checkstyle'
    id 'io.freefair.lombok' version '8.6'
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'org.owasp.dependencycheck' version '9.0.9'
    id 'au.com.dius.pact' version '4.2.14'
    id 'org.flywaydb.flyway' version '10.8.1'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '3.0.0'
}

apply plugin: 'java'
apply plugin: 'idea'

group = 'uk.gov.hmcts.dm'
version = '2.0.0'
mainClassName = 'uk.gov.hmcts.dm.DmApp'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    functionalTestImplementation.extendsFrom(testImplementation)
    functionalTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    smokeTestImplementation.extendsFrom(testImplementation)
    smokeTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    contractTestImplementation.extendsFrom(testImplementation)
    contractTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

configurations.all {
    exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
    exclude group: 'org.codehaus.jettison', module: 'jettison'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url  'https://repo.spring.io/milestone/'}
}

def versions = [
    ehcache            : '3.10.8',
    postgresql         : '42.7.2',
    jackson            : '2.16.1',
    serenity           : '3.7.0',
    serenityreporter   : '3.7.0',
    serenityRestAssured: '3.7.0',
    logging            : '6.1.4',
    pact_version       : '4.1.7',
    emTestHelper       : '2.0.4',
    shedlock           : '5.12.0',
    hibernate          : '6.4.4.Final',
    jupiter            : '5.10.2',
    springSecurity     : '6.2.2'
]

dependencyManagement {
    dependencies {

        //CVE-2022-1471
        dependencySet(group: 'org.yaml', version: '2.2') {
            entry 'snakeyaml'
        }
        // 1.2.11 cause java.lang.NullPointerException: Cannot read the array length because "throwableSuppressed" is null
        dependencySet(group: 'ch.qos.logback', version: '1.5.1') {
            entry 'logback-core'
            entry 'logback-access'
            entry 'logback-classic'
        }
    }
}

dependencies {

    implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.25.2'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.9.1'

    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'

    implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5-jakarta', version: versions.fasterXmlJackson

    implementation group: 'org.ehcache', name: 'ehcache', version: versions.ehcache, {
        exclude group: "org.glassfish.jaxb", module: "jaxb-runtime"
    }

    implementation group: 'org.springframework', name: 'spring-context-support', version: '6.1.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', {
        exclude group: "org.hibernate", module: "hibernate-core"
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'


    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'

    implementation group: 'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate

    implementation group: 'org.postgresql', name: 'postgresql', version: versions.postgresql

    implementation group: "net.javacrumbs.shedlock", name: "shedlock-spring", version: versions.shedlock
    implementation group: "net.javacrumbs.shedlock", name: "shedlock-provider-jdbc-template", version: versions.shedlock

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '10.8.1'
    runtimeOnly group: 'org.flywaydb', name: 'flyway-database-postgresql', version: '10.8.1'

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.1.2'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'


    implementation group: 'com.github.hmcts', name: 'java-logging', version: versions.logging

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.1.1'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.0'

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    implementation group: 'org.apache.groovy', name: 'groovy', version: '4.0.18'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude(module: 'commons-logging')
    }

    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.2.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    testRuntimeOnly group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter
    testImplementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.1'
    testImplementation group:  'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.4'
    testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
    testImplementation group: 'com.github.stephenc.jcip', name :'jcip-annotations', version:'1.0-1'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    testRuntimeOnly group: 'org.junit.vintage', name : 'junit-vintage-engine', version: versions.jupiter
    functionalTestImplementation group: 'com.github.hmcts', name: 'em-test-helper', version: versions.emTestHelper

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.1', classifier: 'all', {
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.6'

    //pact
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version : versions.jupiter
    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

checkstyle {
    maxWarnings = 0
    toolVersion = '10.14.0'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

def coverageExclusionList = [
    '**uk/gov/hmcts/dm/DmApp.java',
    '**uk/gov/hmcts/dm/hateos/*',
    '**uk/gov/hmcts/dm/exception/*',
    '**uk/gov/hmcts/dm/domain/*',
    '**uk/gov/hmcts/dm/commandobject/*',
    '**uk/gov/hmcts/dm/config/**/*',
    '**uk/gov/hmcts/dm/errorhandler/*',
    '**uk/gov/hmcts/dm/repository/RepositoryFinder.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamHealth.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamServiceHealth.java',
    '**uk/gov/hmcts/dm/controller/WelcomeController.java',
    '**uk/gov/hmcts/dm/service/Constants.java',
    '**uk/gov/hmcts/dm/service/DocumentContentVersionModel.java',
    '**uk/gov/hmcts/dm/data/migration/PendingMigrationScriptException*',
    '**uk/gov/hmcts/dm/data/migration/FlywayNoOpStrategy*',
    '**uk/gov/hmcts/dm/config/security/DmServiceAuthFilter*'
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.required = true
        csv.required = false

        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

pitest {
    targetClasses = ['uk.gov.hmcts.dm.*']
    excludedClasses = [
        'uk.gov.hmcts.dm.authchecker.*' ,
        'uk.gov.hmcts.dm.domain.*',
        'uk.gov.hmcts.dm.DmApp.java',
        'uk.gov.hmcts.dm.service.util.*'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

project.tasks['sonarqube'].group = "Verification"

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'dm-store.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

//This is used in get the version for fakeversion and buildInfo  (./gradlew -q printVersion)
task printVersion {
    description 'Prints the version of this project'
    doLast {
        print project.version
    }
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
//    doFirst(){
//        printf("Available processors:::::::::: " + Runtime.runtime.availableProcessors().intdiv(2).toString())
//    }
//
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
//    forkEvery = 10

    group = 'Delivery pipeline'
    description = 'Executes functional tests'

    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
    setClasspath(sourceSets.functionalTest.runtimeClasspath)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    //finalizedBy aggregate
}

serenity {
    reports = ["single-page-html"]
}

processContractTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
processFunctionalTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.smokeTest.output.classesDirs)
    setClasspath(sourceSets.smokeTest.runtimeClasspath)
    include "uk/gov/hmcts/dm/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task fortifyScan(type: JavaExec)  {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task runProviderPactVerification(type: Test) {
    logger.lifecycle("Runnning contract Tests")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.verifier.publishResults', System.getProperty('pact.verifier.publishResults')
    systemProperty 'pact.provider.version', pactVersion.toString();
}

runProviderPactVerification.finalizedBy pactVerify

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')
    baselineOnMigrate = true
    baselineVersion = '1'
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}
