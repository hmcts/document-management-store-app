buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
        classpath("net.serenity-bdd:serenity-single-page-report:2.1.4")
    }
}

plugins {
    id 'application'
    id 'groovy'
    id 'org.owasp.dependencycheck' version '5.3.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'se.patrikerdes.use-latest-versions' version '0.2.13'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'org.sonarqube' version '2.8'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'idea'
    id 'io.franzbecker.gradle-lombok' version '3.3.0'
}

group = 'uk.gov.hmcts.dm'
version = '2.0.0'
mainClassName = 'uk.gov.hmcts.dm.DmApp'

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/functionalTest/groovy')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/smokeTest/groovy')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

configurations {
    functionalTestCompile.extendsFrom(testCompile)
    functionalTestRuntime.extendsFrom(testRuntime)
    smokeTestCompile.extendsFrom(testCompile)
    smokeTestRuntime.extendsFrom(testRuntime)
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//tasks.withType(Test) {
//    maxParallelForks = 3
//}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    jcenter()
    mavenLocal()
}

apply from: 'liquibase.gradle'
apply plugin: 'net.serenity-bdd.aggregator'

def versions = [
    ehcache            : '3.7.1',
    jacocoMavenPlugin  : '0.8.2',
    jsonUnit           : '1.31.1',
    JUnitParams        : '1.1.1',
    lombok             : '1.18.10',
    liquibase          : '3.8.1',
    postgresql         : '42.2.13',
    jackson            : '2.10.2',
    powermock          : '1.7.4',
    serenity           : '2.0.23',
    serenityreporter   : '2.1.4',
    springBoot         : springBoot.class.package.implementationVersion
]
configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.tomcat.embed']) {
                details.useVersion '9.0.37'
            }
        }
    }
}
dependencies {
    compile group: 'com.azure', name: 'azure-storage-blob', version: '12.6.0'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.18'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.24.1'
    compile group: 'org.apache.tomcat', name: 'tomcat-annotations-api', version: '9.0.31'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson

    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.3'

    compile group: 'org.ehcache', name: 'ehcache', version: versions.ehcache

    compile group: 'org.springframework', name: 'spring-context-support', version: '5.2.3.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.12.Final'

    compile group: 'uk.gov.hmcts.reform', name: 'liquibase-core', version: '3.8.1'

    compile group: 'io.swagger', name: 'swagger-core', version: '1.6.1'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.6.1'

    compile group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    compile group: "net.javacrumbs.shedlock", name: "shedlock-spring", version:"3.0.0"
    compile group: "net.javacrumbs.shedlock", name: "shedlock-provider-jdbc-template", version:"4.3.1"

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    compile (group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.3') {
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
    }
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: '5.1.1'
    compile ("uk.gov.hmcts.reform:properties-volume-spring-boot-starter:0.0.4"){
        exclude group: 'org.springframework.cloud' , module : 'spring-cloud-context'
        exclude group: 'org.springframework.boot' , module: 'spring-boot-starter-web'
    }

    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.1.2.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix-dashboard', version: '2.1.2.RELEASE'

    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
        exclude(module: 'commons-logging')
    }

    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit', version: versions.jsonUnit
    testCompile group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: versions.jsonUnit
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.2.1.RELEASE'

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.5'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.5'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: versions.JUnitParams
    testCompile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.2'
    testCompile group: 'io.rest-assured', name :'rest-assured', version:'3.3.0'
    testCompile group: 'com.warrenstrange', name: 'googleauth', version: '1.1.5'
    testCompile group: 'org.codehaus.groovy', name :'groovy-all', version:'2.5.12'
    testCompile group: 'com.github.stephenc.jcip', name :'jcip-annotations', version:'1.0-1'

    testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
}

dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 11 : 0
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

checkstyle {
    maxWarnings = 0
    toolVersion = '8.8'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = "6.11.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

def coverageExclusionList = [
    '**uk/gov/hmcts/dm/domain/',
    '**uk/gov/hmcts/dm/DmApp.java',
    '**uk/gov/hmcts/dm/hateos/*',
    '**uk/gov/hmcts/dm/exception/*',
    '**uk/gov/hmcts/dm/domain/*',
    '**uk/gov/hmcts/dm/commandobject/*',
    '**uk/gov/hmcts/dm/hibernate/*',
    '**uk/gov/hmcts/dm/config/**/*',
    '**uk/gov/hmcts/dm/errorhandler/*',
    '**uk/gov/hmcts/dm/repository/RepositoryFinder.java',
    '**uk/gov/hmcts/dm/service/batch/CustomItemWriter.java',
    '**uk/gov/hmcts/dm/appinsights/*',
    '**uk/gov/hmcts/dm/actuate/health/IdamHealth.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamServiceHealth.java'
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = '0.8.2' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusionList)
        })
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'dm-store.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

//This is used in get the version for fakeversion and buildInfo  (./gradlew -q printVersion)
task printVersion {
    description 'Prints the version of this project'
    doLast {
        print project.version
    }
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
    setClasspath(sourceSets.functionalTest.runtimeClasspath)
    include "uk/gov/hmcts/dm/functional/**"
    failFast = true

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

// Serenity Single page Reports
functional.finalizedBy(aggregate)

serenity {
    reports = ["single-page-html"]
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.smokeTest.output.classesDirs)
    setClasspath(sourceSets.smokeTest.runtimeClasspath)
    include "uk/gov/hmcts/dm/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}
