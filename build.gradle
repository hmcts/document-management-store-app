buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.6.0")
        classpath("net.serenity-bdd:serenity-single-page-report:2.6.0")
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.43'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.7.11'
    id 'com.github.ben-manes.versions' version '0.46.0'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'checkstyle'
    id 'io.freefair.lombok' version '8.0.1'
    id 'info.solidsoft.pitest' version '1.9.0'
    id 'org.owasp.dependencycheck' version '8.2.1'
    id 'au.com.dius.pact' version '4.2.14'
    id 'org.flywaydb.flyway' version '9.16.3'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.dm'
version = '2.0.0'
mainClassName = 'uk.gov.hmcts.dm.DmApp'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    functionalTestImplementation.extendsFrom(testImplementation)
    functionalTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    smokeTestImplementation.extendsFrom(testImplementation)
    smokeTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    contractTestImplementation.extendsFrom(testImplementation)
    contractTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

configurations.all {
    exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
    exclude group: 'org.codehaus.jettison', module: 'jettison'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

def versions = [
    ehcache            : '3.9.3',
    postgresql         : '42.5.1',
    jackson            : '2.14.0-rc1',
    serenity           : '2.6.0',
    serenityreporter   : '2.6.0',
    serenityRestAssured: '2.6.0',
    logging            : '5.1.7',
    pact_version       : '4.1.7',
    emTestHelper       : '1.21.4',
    shedlock           : '4.33.0',
    hibernate          : '5.6.5.Final',
    jupiter            : '5.8.2',
    springSecurity     : '5.7.5'
]

dependencyManagement {
    dependencies {

        //CVE-2022-1471
        dependencySet(group: 'org.yaml', version: '2.0') {
            entry 'snakeyaml'
        }
        // 1.2.11 cause java.lang.NullPointerException: Cannot read the array length because "throwableSuppressed" is null
        dependencySet(group: 'ch.qos.logback', version: '1.2.10') {
            entry 'logback-core'
            entry 'logback-access'
            entry 'logback-classic'
        }

        // CVE-2022-31692 - CVE-2022-31690
        dependencySet(group: 'org.springframework.security', version: '5.7.5') {
            entry 'spring-security-crypto'
            entry 'spring-security-core'
            entry 'spring-security-web'
        }

        //CVE-2022-45688
        dependencySet(group: 'org.json', version: '20230227') {
            entry 'json'
        }
    }
}

dependencies {

    implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.20.2'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.28'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.7.0'

    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson

    implementation group: 'org.ehcache', name: 'ehcache', version: versions.ehcache

    implementation group: 'org.springframework', name: 'spring-context-support', version: '6.0.8'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', {
        exclude group: "org.hibernate", module: "hibernate-core"
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation group: 'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate

    implementation group: 'org.postgresql', name: 'postgresql', version: versions.postgresql

    implementation group: "net.javacrumbs.shedlock", name: "shedlock-spring", version: versions.shedlock
    implementation group: "net.javacrumbs.shedlock", name: "shedlock-provider-jdbc-template", version: versions.shedlock

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.16.3'

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '2.1.5', {
        exclude group: 'com.github.hmcts', module: 'java-logging-spring'
    }
    implementation group: 'com.github.hmcts', name: 'java-logging', version: versions.logging

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.5'

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude(module: 'commons-logging')
    }

    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.7.5'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    testRuntimeOnly group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter
    testImplementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.0'
    testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
    testImplementation group: 'com.github.stephenc.jcip', name :'jcip-annotations', version:'1.0-1'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.5'

    testRuntimeOnly group: 'org.junit.vintage', name : 'junit-vintage-engine', version: versions.jupiter
    functionalTestImplementation group: 'com.github.hmcts', name: 'em-test-helper', version: versions.emTestHelper

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.3.0', classifier: 'all'

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.18.0'

    //pact
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version : versions.jupiter
    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

checkstyle {
    maxWarnings = 0
    toolVersion = '10.4'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

def coverageExclusionList = [
    '**uk/gov/hmcts/dm/DmApp.java',
    '**uk/gov/hmcts/dm/hateos/*',
    '**uk/gov/hmcts/dm/exception/*',
    '**uk/gov/hmcts/dm/domain/*',
    '**uk/gov/hmcts/dm/commandobject/*',
    '**uk/gov/hmcts/dm/config/**/*',
    '**uk/gov/hmcts/dm/errorhandler/*',
    '**uk/gov/hmcts/dm/repository/RepositoryFinder.java',
    '**uk/gov/hmcts/dm/appinsights/*',
    '**uk/gov/hmcts/dm/actuate/health/IdamHealth.java',
    '**uk/gov/hmcts/dm/actuate/health/IdamServiceHealth.java',
    '**uk/gov/hmcts/dm/controller/WelcomeController.java',
    '**uk/gov/hmcts/dm/service/Constants.java',
    '**uk/gov/hmcts/dm/service/DocumentContentVersionModel.java',
    '**uk/gov/hmcts/dm/data/migration/PendingMigrationScriptException*',
    '**uk/gov/hmcts/dm/data/migration/FlywayNoOpStrategy*'
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.required = true
        csv.required = false

        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

pitest {
    targetClasses = ['uk.gov.hmcts.dm.*']
    excludedClasses = [
        'uk.gov.hmcts.dm.appinsights.*' ,
        'uk.gov.hmcts.dm.authchecker.*' ,
        'uk.gov.hmcts.dm.domain.*',
        'uk.gov.hmcts.dm.DmApp.java',
        'uk.gov.hmcts.dm.service.util.*'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

project.tasks['sonarqube'].group = "Verification"

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'dm-store.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

//This is used in get the version for fakeversion and buildInfo  (./gradlew -q printVersion)
task printVersion {
    description 'Prints the version of this project'
    doLast {
        print project.version
    }
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
//    doFirst(){
//        printf("Available processors:::::::::: " + Runtime.runtime.availableProcessors().intdiv(2).toString())
//    }
//
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
//    forkEvery = 10

    group = 'Delivery pipeline'
    description = 'Executes functional tests'

    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
    setClasspath(sourceSets.functionalTest.runtimeClasspath)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    //finalizedBy aggregate
}

serenity {
    reports = ["single-page-html"]
}

processContractTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
processFunctionalTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.smokeTest.output.classesDirs)
    setClasspath(sourceSets.smokeTest.runtimeClasspath)
    include "uk/gov/hmcts/dm/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task fortifyScan(type: JavaExec)  {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task runProviderPactVerification(type: Test) {
    logger.lifecycle("Runnning contract Tests")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.verifier.publishResults', System.getProperty('pact.verifier.publishResults')
    systemProperty 'pact.provider.version', pactVersion.toString();
}

runProviderPactVerification.finalizedBy pactVerify

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')
    baselineOnMigrate = true
    baselineVersion = '1'
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}
